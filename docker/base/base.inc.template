root /usr/wikia/slot1/current/src;
listen 8080;

# filter out unwanted directories
location ~ ^/(lib|serialized|tests|mw-config|includes|cache|maintenance|languages|config) {
    return 403;
}

# # Normalize url e.g. /en/path -> /path
location ~ "/(?!api)/" {
    location ~* "^/[a-z]{2,3}(-[a-z-]{2,13})?/.*" {
        rewrite "^/(?:[a-z]{2,3}(-[a-z-]{2,13})?)/(?<path>.*)" /$path;
    }
}


location / {
    if ($redirect_uri) {
        return 301 $redirect_uri;
    }

    if ($rewrite_uri) {
        rewrite ^ $rewrite_uri;
    }
}

    # known MediaWiki PHP endpoints
location ~ ^/(api|health|index|load|metrics|opensearch_desc|extensions/wikia/Tasks/proxy/proxy|redirect-canonical|server|wikia|wikia-robots-txt)\.php {
    fastcgi_read_timeout ${FASTCGI_READ_TIMEOUT};
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass php-wikia:9000;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;

    # make MediaWiki think we're running on a standard port
    # otherwise we end up with redirects to port 8080
    fastcgi_param SERVER_PORT 80;

    set $fastcgi_host $host;

    if ($http_x_original_host) {
        set $fastcgi_host $http_x_original_host;
    }

    # use the original request host so MW can identify the specific wiki
    fastcgi_param HTTP_HOST $fastcgi_host;
    fastcgi_param SERVER_NAME $fastcgi_host;
}

error_page 404 = /redirect-canonical.php;
