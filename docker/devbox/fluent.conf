<source>
  	@type tcp
  	tag mediawiki
  	port 9999
  	<parse>
		@type json
		time_format %Y-%m-%dT%H:%M:%S.%N%z
		time_key @timestamp
	</parse>
</source>

<source>
	@type tail
	path /var/nginx/logs/access.log
	pos_file /var/nginx/logs/access.log.pos
	tag nginx.access
	format json
</source>

<source>
	@type tail
	path /var/nginx/logs/error.log
	pos_file /var/nginx/logs/error.log.pos
	tag nginx.error
	format /^(?<time>[^ ]+\s[^ ]+)\s\[(?<level>[^\]]+)\]\s(?<pid>[^#]+#[^:]):\s(?<thread_id>\*\d+)\s(?<@message>.*)$/
</source>

<filter **>
  	@type record_transformer
  	<record>
   		@hostname "#{ENV["HOST_HOSTNAME"]}"
    	source ${tag}
  	</record>
</filter>

<filter fluent.**>
	@type record_transformer
	<record>
		@message ${record["message"]}
		appname fluentd
	</record>
	remove_keys $['message']
</filter>

<filter nginx.error>
  @type record_transformer
  <record>
    appname "mediawiki-nginx-error-logs"
  </record>
</filter>

<filter **>
  @type throttle
  group_key appname
  group_bucket_period_s   60
  group_bucket_limit    3000
  group_reset_rate_s      50
</filter>

<match fluent.**>
	@type elasticsearch
	host logs-prod.es.service.sjc.consul
	logstash_format true
	logstash_prefix logstash-dev-mediawiki
	<buffer>
		flush_thread_count 2
		flush_interval 1s
		chunk_limit_size 2M
		queue_limit_length 32
		retry_max_interval 30
		retry_forever true
	</buffer>
</match>

<match **>
	@type copy
	<store>
		@type stdout
	</store>
	<store>
		@type elasticsearch
		host logs-prod.es.service.sjc.consul
		logstash_format true
		logstash_prefix logstash-dev-mediawiki
		<buffer>
			flush_thread_count 2
			flush_interval 5s
			chunk_limit_size 2M
			queue_limit_length 32
			retry_max_interval 30
			retry_forever true
		</buffer>
	</store>
</match>
